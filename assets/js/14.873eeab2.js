(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{297:function(e,t,a){"use strict";a.r(t);var s=a(10),v=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"k8s隧道"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#k8s隧道"}},[e._v("#")]),e._v(" K8S隧道")]),e._v(" "),t("h2",{attrs:{id:"功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#功能"}},[e._v("#")]),e._v(" 功能")]),e._v(" "),t("ul",[t("li",[e._v("通过K8S接口连接到集群内指定的Pod，从而去访问集群内的其它服务")])]),e._v(" "),t("h2",{attrs:{id:"使用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[e._v("#")]),e._v(" 使用场景")]),e._v(" "),t("p",[e._v("这种方式是为了解决无法在K8S集群外部访问集群内尚未暴露出来的服务（内部服务）。")]),e._v(" "),t("p",[e._v("目前提供了两种支持方式："),t("code",[e._v("端口转发模式")]),e._v("和"),t("code",[e._v("进程模式")]),e._v("。端口转发模式是利用了K8S的"),t("code",[e._v("portfoward")]),e._v("接口，其原理与"),t("code",[e._v("kubectl port-forward")]),e._v("命令一致；进程模式与SSH的进程模式基本一致，都是需要用户先在POD里安装好"),t("a",{attrs:{href:"https://github.com/turbo-tunnel/telnet-go",target:"_blank",rel:"noopener noreferrer"}},[e._v("telnet"),t("OutboundLink")],1),e._v("工具，然后通过K8S的"),t("code",[e._v("exec")]),e._v("通道去执行这个命令行，从而建立与其它服务的连接。")]),e._v(" "),t("blockquote",[t("p",[e._v("优先推荐使用"),t("code",[e._v("端口转发模式")]),e._v("，如果失败可以改用"),t("code",[e._v("进程模式")]),e._v("再试下。")])]),e._v(" "),t("h2",{attrs:{id:"k8s隧道客户端"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#k8s隧道客户端"}},[e._v("#")]),e._v(" K8S隧道客户端")]),e._v(" "),t("h3",{attrs:{id:"端口转发模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#端口转发模式"}},[e._v("#")]),e._v(" 端口转发模式")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("$ turbo-tunnel "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-l")]),e._v(" http://127.0.0.1:8080 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-t")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"k8s://1.1.1.1:8443/?namespace=test&kubeconfig=/root/kubeconfig"')]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("ul",[t("li",[t("code",[e._v("namespace")]),e._v(": 要访问POD所在的命名空间，默认为"),t("code",[e._v("default")])]),e._v(" "),t("li",[t("code",[e._v("kubeconfig")]),e._v(": kubeconfig文件路径")]),e._v(" "),t("li",[t("code",[e._v("client_cert")]),e._v(": 客户端证书文件路径")]),e._v(" "),t("li",[t("code",[e._v("client_key")]),e._v(": 客户端key文件路径")]),e._v(" "),t("li",[t("code",[e._v("ca_cert")]),e._v(": CA证书文件路径")])]),e._v(" "),t("p",[e._v("如果没有kubeconfig文件，也可以通过指定"),t("code",[e._v("client_cert")]),e._v(" + "),t("code",[e._v("client_key")]),e._v(" + "),t("code",[e._v("ca_cert")]),e._v("这三个参数来代替"),t("code",[e._v("kubeconfig")]),e._v("参数。")]),e._v(" "),t("p",[e._v("访问时需要将目标地址设置为"),t("code",[e._v("POD")]),e._v("名，"),t("code",[e._v("暂时还不支持指定ip访问")]),e._v("。")]),e._v(" "),t("p",[e._v("如果只是想把POD中的地址映射到本地，可以使用以下命令：")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("$ turbo-tunnel "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-l")]),e._v(" tcp://127.0.0.1:7777 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-t")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"k8s://1.1.1.1:8443/?namespace=test&kubeconfig=/root/kubeconfig"')]),e._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-t")]),e._v(" tcp://pod-1:8080\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("该命令等价于以下k8s命令："),t("code",[e._v("kubectl -n test port-forward pod-1 7777:8080")]),e._v("。")]),e._v(" "),t("h3",{attrs:{id:"进程模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进程模式"}},[e._v("#")]),e._v(" 进程模式")]),e._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("$ turbo-tunnel "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-l")]),e._v(" http://127.0.0.1:8080 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-t")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"k8s+process://1.1.1.1:8443/usr/local/bin/go-telnet?namespace=test&pod=pod-1&kubeconfig=/root/kubeconfig"')]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("ul",[t("li",[t("code",[e._v("/usr/local/bin/telnet")]),e._v("是"),t("code",[e._v("telnet")]),e._v("工具在POD中的路径")]),e._v(" "),t("li",[t("code",[e._v("namespace")]),e._v(": POD所在的命名空间，默认为"),t("code",[e._v("default")])]),e._v(" "),t("li",[t("code",[e._v("pod")]),e._v(": POD的名字")]),e._v(" "),t("li",[t("code",[e._v("kubeconfig")]),e._v(": kubeconfig文件路径")]),e._v(" "),t("li",[t("code",[e._v("client_cert")]),e._v(": 客户端证书文件路径")]),e._v(" "),t("li",[t("code",[e._v("client_key")]),e._v(": 客户端key文件路径")]),e._v(" "),t("li",[t("code",[e._v("ca_cert")]),e._v(": CA证书文件路径")])]),e._v(" "),t("p",[e._v("如果没有kubeconfig文件，也可以通过指定"),t("code",[e._v("client_cert")]),e._v(" + "),t("code",[e._v("client_key")]),e._v(" + "),t("code",[e._v("ca_cert")]),e._v("这三个参数来代替"),t("code",[e._v("kubeconfig")]),e._v("参数。")])])}),[],!1,null,null,null);t.default=v.exports}}]);