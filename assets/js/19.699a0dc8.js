(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{460:function(t,a,s){"use strict";s.r(a);var e=s(24),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"websocket隧道"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#websocket隧道"}},[t._v("#")]),t._v(" WebSocket隧道")]),t._v(" "),s("h2",{attrs:{id:"功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#功能"}},[t._v("#")]),t._v(" 功能")]),t._v(" "),s("p",[t._v("提供WebSocket隧道服务端和客户端能力。")]),t._v(" "),s("h2",{attrs:{id:"websocket隧道服务端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#websocket隧道服务端"}},[t._v("#")]),t._v(" WebSocket隧道服务端")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ turbo-tunnel -l ws://username:password@127.0.0.1/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("addr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("此命令可以创建WebSocket隧道服务端，其中"),s("code",[t._v("{addr}")]),t._v("和"),s("code",[t._v("{port}")]),t._v("在这里是变量占位符，用于指示目标地址和目标端口参数。")]),t._v(" "),s("blockquote",[s("p",[t._v("这是因为WebSocket协议本身并不是一种标准的隧道协议，因此需要使用特定的字段来指定目标地址信息。")])]),t._v(" "),s("p",[t._v("运行过程中，当需要访问"),s("code",[t._v("1.1.1.1:8888")]),t._v("服务时，客户端会动态生成请求路径："),s("code",[t._v("/1.1.1.1/8888")]),t._v("。")]),t._v(" "),s("p",[t._v("这里可以根据使用者的需要改成不同的格式，例如："),s("code",[t._v("/proxy-{addr}-{port}")]),t._v("或"),s("code",[t._v("/proxy?addr={addr}&port={port}")]),t._v("。但是，这里设置的格式需要与客户端指定的url格式保持一致。")]),t._v(" "),s("h2",{attrs:{id:"websocket隧道客户端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#websocket隧道客户端"}},[t._v("#")]),t._v(" WebSocket隧道客户端")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ turbo-tunnel -l http://:8080/ -t ws://username:password@127.0.0.1/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("addr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("该命令会创建一个HTTPS代理服务端，并通过WebSocket隧道"),s("code",[t._v("ws://username:password@127.0.0.1/{addr}/{port}")]),t._v("转发所有流量。")]),t._v(" "),s("h2",{attrs:{id:"使用wss协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用wss协议"}},[t._v("#")]),t._v(" 使用WSS协议")]),t._v(" "),s("p",[t._v("turbo-tunnel本身没有提供SSL服务端支持，需要使用者在外面套一层"),s("code",[t._v("nginx")]),t._v("之类的Web容器来支持SSL，这也是推荐的使用方法。")])])}),[],!1,null,null,null);a.default=r.exports}}]);