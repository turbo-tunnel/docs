(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{304:function(s,a,t){"use strict";t.r(a);var n=t(10),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"透明代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#透明代理"}},[s._v("#")]),s._v(" 透明代理")]),s._v(" "),a("h2",{attrs:{id:"什么是透明代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是透明代理"}},[s._v("#")]),s._v(" 什么是透明代理")]),s._v(" "),a("p",[s._v("透明代理是指不需要应用主动配置代理就可以自动通过代理访问服务的代理技术，这种情况下代理对应用完全透明，应用不会感知到代理的存在。相比于普通代理方式，这种方式不需要应用主动支持代理即可使用，因此应用范围更加广泛。")]),s._v(" "),a("p",[s._v("透明代理分为全局透明代理和进程级透明代理，全局透明代理是指所有进程都会通过这个代理访问网络，一般是通过修改路由表或iptables之类的方式实现的（VPN就是一种最为常见的全局透明代理）；而进程级透明代理只对特定的进程生效，一般使用Hook Socket函数之类的方式实现。前者在使用上更加方便，使用时不需要对进程进行特殊处理；而后者则更加灵活，也更加安全一些（相当于访问网络有白名单机制）。")]),s._v(" "),a("p",[s._v("透明代理很好地解决了许多应用不支持配置代理，导致在部分网络环境下无法正常使用的问题。")]),s._v(" "),a("h2",{attrs:{id:"常见的透明代理方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见的透明代理方案"}},[s._v("#")]),s._v(" 常见的透明代理方案")]),s._v(" "),a("p",[s._v("常见的透明代理实现原理：")]),s._v(" "),a("ul",[a("li",[s._v("修改路由表")]),s._v(" "),a("li",[s._v("修改iptables")]),s._v(" "),a("li",[s._v("Hook socket函数")])]),s._v(" "),a("p",[s._v("下面介绍几种常见的透明代理工具：")]),s._v(" "),a("h3",{attrs:{id:"proxifier"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#proxifier"}},[s._v("#")]),s._v(" Proxifier")]),s._v(" "),a("p",[a("code",[s._v("Proxifier")]),s._v("是一款跨平台的可视化全局透明代理管理工具，在Windows端主要是通过LSP自动在每个进程中注入DLL，然后Hook Socket函数来实现的。它支持"),a("code",[s._v("HTTP")]),s._v("、"),a("code",[s._v("Socks4")]),s._v("、"),a("code",[s._v("Socks5")]),s._v("等协议，并且可以配置路由规则，在使用上还是比较方便的。详细使用文档可以参考："),a("a",{attrs:{href:"https://www.xiequ.cn/httpproxy/contents/4/68.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("电脑全面变IP神器之：Proxifier使用指南"),a("OutboundLink")],1),s._v("。")]),s._v(" "),a("p",[s._v("但它不支持"),a("code",[s._v("WSL")]),s._v("，因此WSL里的程序是无法通过Proxifier访问网络的。而且它对Mac端的兼容性不是很好，因此Mac端不太推荐使用该工具。")]),s._v(" "),a("h3",{attrs:{id:"proxychains"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#proxychains"}},[s._v("#")]),s._v(" proxychains")]),s._v(" "),a("p",[s._v("proxychains是一款Linux和MacOS上使用的命令行工具，将代理地址配置到配置文件后，在命令行前面加上"),a("code",[s._v("proxychains")]),s._v("就可以通过Hook socket函数进行透明代理。具体实现原理与使用方法可以参考"),a("a",{attrs:{href:"https://www.drunkdream.com/2017/02/24/ubuntu-install-proxychains/",target:"_blank",rel:"noopener noreferrer"}},[s._v("这篇文章"),a("OutboundLink")],1),s._v("。")]),s._v(" "),a("p",[s._v("但是proxychains不支持策略路由，这种情况下可以借助"),a("code",[s._v("turbo-tunnel")]),s._v("达到这样的效果。")]),s._v(" "),a("ul",[a("li",[s._v("安装proxychains")])]),s._v(" "),a("p",[s._v("Debian")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" proxychains4\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("CentOS")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/rofl0r/proxychains-ng\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" proxychains\n./configure\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("ul",[a("li",[s._v("启动turbo-tunnel")])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("turbo-tunnel "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" ~/tunnel.yaml "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" --auto-reload\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("code",[s._v("~/tunnel.yaml")]),s._v("是配置文件，在里面指定代理服务监听在"),a("code",[s._v("http://127.0.0.1:9999")]),s._v("地址。")]),s._v(" "),a("ul",[a("li",[s._v("配置/etc/proxychains4.conf")])]),s._v(" "),a("div",{staticClass:"language-conf line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('strict_chain\nproxy_dns \n# Some timeouts in milliseconds\ntcp_read_time_out 15000\ntcp_connect_time_out 8000\n\n[ProxyList]\n# add proxy here ...\n# meanwile\n# defaults set to "tor"\n# socks4        127.0.0.1 9050\nhttp 127.0.0.1 9999\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("ul",[a("li",[s._v("通过proxychains访问目标服务")])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("proxychains "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" http://www.google.com/\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("通过"),a("code",[s._v("tunnel.yaml")]),s._v("进行路由规则的管理，使得"),a("code",[s._v("proxychains")]),s._v("命令变得更加通用，降低了使用成本。")]),s._v(" "),a("blockquote",[a("p",[s._v("在Windows上如果想同时支持普通Windows应用以及WSL应用，可以通过"),a("code",[s._v("turbo-tunnel")]),s._v("先创建一个通用的本地代理，并配置好策略文件，然后Windows应用使用Proxifier进行代理，WSL应用使用proxychains进行代理。这种情况下，路由策略统一由turbo-tunnel进行管理，Proxifier仅用作透明代理。")])]),s._v(" "),a("h3",{attrs:{id:"tun2socks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tun2socks"}},[s._v("#")]),s._v(" tun2socks")]),s._v(" "),a("p",[s._v("tun2socks是一款跨平台的命令行工具，可以将网卡接收到的数据转发给socks5代理，因此可以通过这个工具实现全局透明代理。目前常见的实现有"),a("a",{attrs:{href:"https://github.com/eycorsican/go-tun2socks",target:"_blank",rel:"noopener noreferrer"}},[s._v("go-tun2socks"),a("OutboundLink")],1),s._v("和"),a("a",{attrs:{href:"https://github.com/xjasonlyu/tun2sockshttps://github.com/xjasonlyu/tun2socks",target:"_blank",rel:"noopener noreferrer"}},[s._v("tun2socks"),a("OutboundLink")],1),s._v("。")]),s._v(" "),a("p",[s._v("下面介绍在Linux系统上的使用方法：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("turbo-tunel "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v(" socks5://127.0.0.1:9999 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" http://192.168.0.1:8080/ "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" --auto-reload\n \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" tuntap "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" mode tun dev tun1\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" addr "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("240.0")]),s._v(".0.1 dev tun1\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" dev tun1 up\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" route del default\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" route "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" default via "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("240.0")]),s._v(".0.1\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" route "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.0/16 via "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$myip")]),s._v("\n\n./tun2socks "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-proxyServer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:9999 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-loglevel")]),s._v(" debug "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-tunName")]),s._v(" tun1 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-tunAddr")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("240.0")]),s._v(".0.2 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-tunGw")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("240.0")]),s._v(".0.1 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-proxyType")]),s._v(" socks "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-tunDns")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.28")]),s._v(".0.12\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("首先使用"),a("code",[s._v("turbo-tunnel")]),s._v("创建一个"),a("code",[s._v("socks5")]),s._v("代理服务器，并转发给"),a("code",[s._v("192.168.0.1:8080")]),s._v("地址的"),a("code",[s._v("http")]),s._v("代理服务器。")]),s._v(" "),a("p",[s._v("然后使用"),a("code",[s._v("ip tuntap add mode tun dev tun1")]),s._v("命令创建一个虚拟网卡，并通过"),a("code",[s._v("ip route add default via 240.0.0.1")]),s._v("命令将虚拟网卡设置为默认网卡，这样所有的流量都会发送到这个网卡；如果有部分地址必须直连，可以通过"),a("code",[s._v("ip route add 192.168.0.0/16 via $myip")]),s._v("的方式配置直连规则，"),a("code",[s._v("$myip")]),s._v("是真正连接网络的网卡ip。")]),s._v(" "),a("p",[s._v("在"),a("code",[s._v("tun2socks")]),s._v("命令行中，"),a("code",[s._v("-tunName")]),s._v("参数指定刚才创建的虚拟网卡作为输入端，"),a("code",[s._v("-proxyServer")]),s._v("参数指定了上游代理服务器地址，代理服务器类型由"),a("code",[s._v("-proxyType")]),s._v("参数决定。")]),s._v(" "),a("p",[s._v("tun2socks有一个问题，就是域名解析完全依赖本地的域名解析，无法使用服务端域名解析。这样，如果某些域名受到污染，就会导致访问受到影响。此时需要使用其它方案来解决域名污染问题。")]),s._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),a("p",[s._v("借助于透明代理工具和turbo-tunnel路由规则管理的能力，可以实现较为灵活的全局/进程级透明代理。具体使用哪款透明代理工具，取决于具体使用场景。全局透明代理在使用上更加方便，而进程级透明代理则更加灵活可控。")])])}),[],!1,null,null,null);a.default=e.exports}}]);