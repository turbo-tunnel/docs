(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{449:function(t,e,_){"use strict";_.r(e);var v=_(24),s=Object(v.a)({},(function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"turbotunnel使用文档"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#turbotunnel使用文档"}},[t._v("#")]),t._v(" TurboTunnel使用文档")]),t._v(" "),_("h2",{attrs:{id:"环境要求"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#环境要求"}},[t._v("#")]),t._v(" 环境要求")]),t._v(" "),_("ul",[_("li",[t._v("操作系统： "),_("code",[t._v("Windows")]),t._v("、"),_("code",[t._v("Linux")]),t._v("、"),_("code",[t._v("MacOS")])]),t._v(" "),_("li",[t._v("Python: "),_("code",[t._v(">=3.5")])])]),t._v(" "),_("h2",{attrs:{id:"安装方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#安装方法"}},[t._v("#")]),t._v(" 安装方法")]),t._v(" "),_("div",{staticClass:"language-bash extra-class"},[_("pre",{pre:!0,attrs:{class:"language-bash"}},[_("code",[t._v("$ python3 -m pip "),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" turbo-tunnel\n")])])]),_("p",[t._v("使用"),_("code",[t._v("turbo-tunnel")]),t._v("命令测试安装是否成功。如果提示没有找到程序，可以使用"),_("code",[t._v("python3 -m turbo_tunnel")]),t._v("来执行命令。")]),t._v(" "),_("h2",{attrs:{id:"基本功能"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#基本功能"}},[t._v("#")]),t._v(" 基本功能")]),t._v(" "),_("p",[t._v("在turbo-tunnel中每种类型的隧道服务都会定义一个URI，例如："),_("code",[t._v("http://1.1.1.1:8080/")]),t._v("、"),_("code",[t._v("ssh://2.2.2.2:2222/")]),t._v("等。不同服务通过URL中的"),_("code",[t._v("协议")]),t._v("区分。用户也可以定义自己的隧道协议。")]),t._v(" "),_("p",[t._v("基本上每种类型的隧道都会实现一个"),_("code",[t._v("TunnelServer")]),t._v("和"),_("code",[t._v("Tunnel")]),t._v("类。在命令行中，使用"),_("code",[t._v("-l/--listen")]),t._v("参数可指定要监听服务的相关信息；而使用"),_("code",[t._v("-t/--tunnel")]),t._v("参数可以指定后续要穿越的隧道。")]),t._v(" "),_("p",[t._v("监听服务时，如果指定了IP地址，表示会使用该地址进行监听；如果不指定，例如"),_("code",[t._v("http://:8080/")]),t._v("，则表示监听在全局地址："),_("code",[t._v("0.0.0.0")]),t._v("。")]),t._v(" "),_("h2",{attrs:{id:"主要功能"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#主要功能"}},[t._v("#")]),t._v(" 主要功能")]),t._v(" "),_("ul",[_("li",[_("RouterLink",{attrs:{to:"/port_forward.html"}},[t._v("端口转发")])],1),t._v(" "),_("li",[_("RouterLink",{attrs:{to:"/https.html"}},[t._v("HTTPS代理隧道")])],1),t._v(" "),_("li",[_("RouterLink",{attrs:{to:"/ssh.html"}},[t._v("SSH隧道")])],1),t._v(" "),_("li",[_("RouterLink",{attrs:{to:"/websocket.html"}},[t._v("WebSocket隧道")])],1),t._v(" "),_("li",[_("RouterLink",{attrs:{to:"/socks.html"}},[t._v("Socks代理隧道")])],1),t._v(" "),_("li",[_("RouterLink",{attrs:{to:"/icmp.html"}},[t._v("ICMP隧道")])],1),t._v(" "),_("li",[_("RouterLink",{attrs:{to:"/k8s.html"}},[t._v("K8S隧道")])],1),t._v(" "),_("li",[_("RouterLink",{attrs:{to:"/nested_tunnel.html"}},[t._v("嵌套隧道")])],1),t._v(" "),_("li",[_("RouterLink",{attrs:{to:"/config.html"}},[t._v("配置文件")])],1),t._v(" "),_("li",[_("RouterLink",{attrs:{to:"/plugin.html"}},[t._v("扩展插件")])],1)])])}),[],!1,null,null,null);e.default=s.exports}}]);